@model List<userinroledto>

@{
    ViewData["Title"] = "Manage Users in Role";
    var roleId = ViewData["RoleId"];
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-10 offset-md-1">
            <div class="card shadow">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h3 class="mb-0">Manage Users in Role</h3>
                    <a class="btn btn-light" asp-action="Index">
                        <i class="bi bi-arrow-left-circle"></i> Back to Roles
                    </a>
                </div>
                <div class="card-body">
                    <form asp-action="addorremoveuser" asp-route-id="@roleId" method="post" id="roleForm" class="needs-validation" novalidate>
                        @Html.AntiForgeryToken()

                        <div class="table-responsive">
                            <table class="table table-hover table-striped">
                                <thead class="table-light">
                                    <tr>
                                        <th>Select</th>
                                        <th>Username</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.Count; i++)
                                    {
                                        <tr>
                                            <td>
                                                <input asp-for="@Model[i].isselected" class="form-check-input" />
                                            </td>
                                            <td>
                                                <label class="form-check-label" asp-for="@Model[i].username">@Model[i].username</label>
                                                <input asp-for="@Model[i].username" type="hidden" />
                                                <input asp-for="@Model[i].userid" type="hidden" />
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Validation Message -->
                        <div id="validation-errors" class="alert alert-danger d-none"></div>

                        <div class="d-flex justify-content-end gap-2 mt-3">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="bi bi-x-circle"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-save"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (() => {
            const form = document.getElementById('roleForm');
            const validationErrors = document.getElementById('validation-errors');

            form.addEventListener('submit', function (event) {
                const checkboxes = form.querySelectorAll('.form-check-input');
                const atLeastOneChecked = Array.from(checkboxes).some(cb => cb.checked);

                if (!atLeastOneChecked) {
                    event.preventDefault();
                    validationErrors.innerHTML = '<strong>Error:</strong> At least one user must be selected.';
                    validationErrors.classList.remove('d-none');
                } else {
                    validationErrors.classList.add('d-none');
                }

                form.classList.add('was-validated');
            });
        })();
    </script>
}
